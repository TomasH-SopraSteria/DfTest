{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AWCustomer",
						"type": "DatasetReference"
					},
					"name": "SourceCustomer"
				},
				{
					"dataset": {
						"referenceName": "StagingDBCustomerAddress",
						"type": "DatasetReference"
					},
					"name": "SourceCustomerAddress"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "SelectCA"
				},
				{
					"name": "SelectCustomer"
				},
				{
					"name": "join1"
				},
				{
					"name": "select1"
				},
				{
					"name": "surrogateKey1",
					"description": "CustomerIDKey"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as integer,",
				"          NameStyle as boolean,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          PasswordHash as string,",
				"          PasswordSalt as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SourceCustomer",
				"source(output(",
				"          CustomerID as integer,",
				"          AddressID as integer,",
				"          AddressType as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SourceCustomerAddress",
				"SourceCustomerAddress select(mapColumn(",
				"          CustomerID,",
				"          AddressID,",
				"          AddressType",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectCA",
				"SourceCustomer select(mapColumn(",
				"          CustomerID,",
				"          NameStyle,",
				"          Title,",
				"          FirstName,",
				"          MiddleName,",
				"          LastName,",
				"          Suffix,",
				"          CompanyName,",
				"          SalesPerson,",
				"          EmailAddress,",
				"          Phone",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectCustomer",
				"SelectCustomer, SelectCA join(SelectCustomer@CustomerID == SelectCA@CustomerID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          CustomerID = SelectCustomer@CustomerID,",
				"          NameStyle,",
				"          Title,",
				"          FirstName,",
				"          MiddleName,",
				"          LastName,",
				"          Suffix,",
				"          CompanyName,",
				"          SalesPerson,",
				"          EmailAddress,",
				"          Phone,",
				"          CustomerID = SelectCustomer@CustomerID,",
				"          AddressID,",
				"          AddressType",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"derivedColumn1 keyGenerate(output(CustomerIDKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"select1 derive(hash = sha2(256, NameStyle,CustomerID,Title)) ~> derivedColumn1",
				"surrogateKey1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerIDKey as integer,",
				"          CustomerKey as integer,",
				"          CustomerID as integer,",
				"          NameStyle as string,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          PasswordHash as string,",
				"          PasswordSalt as string,",
				"          AddressID as integer,",
				"          AddressType as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CustomerKey = CustomerIDKey,",
				"          CustomerID,",
				"          NameStyle,",
				"          Title,",
				"          FirstName,",
				"          MiddleName,",
				"          LastName,",
				"          Suffix,",
				"          CompanyName,",
				"          SalesPerson,",
				"          EmailAddress,",
				"          Phone,",
				"          AddressID,",
				"          AddressType",
				"     )) ~> sink1"
			]
		}
	}
}